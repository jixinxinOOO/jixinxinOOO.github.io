<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Kotlin基础</title>
      <link href="/969486518/"/>
      <url>/969486518/</url>
      
        <content type="html"><![CDATA[<h4 id="一、开发环境"><a href="#一、开发环境" class="headerlink" title="一、开发环境"></a>一、开发环境</h4><ul><li><p>Eclipse</p></li><li><p>IntelliJ IDEA</p></li><li><p>AndroidStudio</p></li><li><p>Kotlin在线编译器</p><p><em>（具体使用哪一个开发环境，视个人情况选择）</em></p></li></ul><h4 id="二、kotlin常用语法"><a href="#二、kotlin常用语法" class="headerlink" title="二、kotlin常用语法"></a>二、kotlin常用语法</h4><a id="more"></a><h5 id="1、main函数"><a href="#1、main函数" class="headerlink" title="1、main函数"></a><strong>1、main函数</strong></h5><img src="https://note.youdao.com/yws/public/resource/3b9b628826374bde6529ff84264f02b1/xmlnote/6DD427BF9729432B9AC935ADCD1B5241/111" alt="main函数构成" style="zoom:50%;" /><p><strong>2、常见的数据类型</strong></p><ul><li><p>byte</p></li><li><p>short</p></li><li><p>int</p></li><li><p>long</p></li><li><p>float</p></li><li><p>double</p></li><li><p>string(和java不一样的地方)</p></li></ul><p>*<em>3、kotlin智能识别数据类型 *</em></p><p>var声明的是变量</p><p>val声明的是常量</p><p><code>var a:Int</code></p><p>显示类型声明  <code>var i:Int =8888</code></p><p>int类型可以直接用二进制表示,0b开头表示二进制</p><p><code>var aInt:Int=0b0011</code></p><p><strong>4、占位符</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> template=<span class="string">"""我们去<span class="subst">$&#123;name&#125;</span>玩，晴空万里 """</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">注意这个字符串是由三个引号包裹的，<span class="subst">$&#123;&#125;</span>这个是占位符</span></span><br></pre></td></tr></table></figure><p><strong>5、字符串比较</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name1=<span class="string">"张三"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> name2=<span class="string">"张三"</span></span><br></pre></td></tr></table></figure><p>结果 name1==name2 true 和java不一样</p><p>有忽略大小写的比较函数var1.equals(var2,true)</p><p><strong>6、空值处理</strong></p><p>编译不通过</p><p> str:String? 加上一个问号，表示可以接受null</p><p><strong>7、kotlin函数编写规则</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> 函数名（参数名：参数类型）：返回值类型&#123;</span></span><br><span class="line"></span><br><span class="line">函数体</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>8、函数的4种表示形式</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">functionTest</span><span class="params">(x: <span class="type">Int</span>, y: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">functionTest2</span><span class="params">(x: <span class="type">Int</span>, y: <span class="type">Int</span>)</span></span> = x + y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = functionTest(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">println(result)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result2 = functionTest2(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">println(result2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> functionTest3 = &#123; x: <span class="built_in">Int</span>, y: <span class="built_in">Int</span> -&gt; x + y &#125;</span><br><span class="line">println(functionTest3(<span class="number">3</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> functionTest4: (<span class="built_in">Int</span>, <span class="built_in">Int</span>) -&gt; <span class="built_in">Int</span> = &#123; x, y -&gt; x + y &#125;</span><br><span class="line">println(functionTest4(<span class="number">3</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><p><strong>9、When语句</strong></p><p><strong>10、区间和循环</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nums=<span class="number">1</span>..<span class="number">100</span>  #数组</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> nums=<span class="number">1</span> util <span class="number">100</span> #不包括<span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(num <span class="keyword">in</span> nums step <span class="number">2</span>)&#123;&#125; #step <span class="number">2</span>步长</span><br></pre></td></tr></table></figure><p><strong>11、默认函数、具名函数</strong></p><p>//默认参数就是声明完参数名和参数类型后，追加一个默认值,具名参数就是需要显示声明给哪个参数赋值</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">println(circleSqure(radius = <span class="number">1f</span>))</span><br><span class="line"></span><br><span class="line">println(circleSqure(<span class="number">1f</span>, <span class="number">2f</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">circleSqure</span><span class="params">(pai: <span class="type">Float</span> = pi, radius: <span class="type">Float</span>)</span></span> = pi * radius * radius</span><br></pre></td></tr></table></figure><p><strong>12、数学函数</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">求根号 Math.sqrt()</span><br><span class="line"></span><br><span class="line">幂函数 Math.pow</span><br></pre></td></tr></table></figure><p><strong>13、BigInteger存放大数据</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BigInteger(<span class="string">"1000000"</span>)</span><br><span class="line">BigInteger.ONE</span><br></pre></td></tr></table></figure><p><strong>14、递归</strong></p><hr><h4 id="三、集合"><a href="#三、集合" class="headerlink" title="三、集合"></a>三、集合</h4><p><strong>1、List</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">listTest</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> lists = *listOf*(<span class="string">"买鸡蛋"</span>, <span class="string">"买大米"</span>, <span class="string">"买杜蕾斯"</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">data</span> <span class="keyword">in</span> lists) &#123;</span><br><span class="line"></span><br><span class="line">print(<span class="string">"<span class="subst">$&#123;data&#125;</span>"</span> + <span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、Map</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> map= TreeMap&lt;String,String&gt;()</span><br><span class="line"></span><br><span class="line">map[<span class="string">"好"</span>]=<span class="string">"good"</span></span><br><span class="line"></span><br><span class="line">map[<span class="string">"学习"</span>]=<span class="string">"study"</span></span><br><span class="line"></span><br><span class="line">map[<span class="string">"天"</span>]=<span class="string">"day"</span></span><br><span class="line"></span><br><span class="line">map[<span class="string">"向上"</span>]=<span class="string">"up"</span></span><br><span class="line"></span><br><span class="line">*println*(map[<span class="string">"好"</span>])</span><br></pre></td></tr></table></figure><hr><h4 id="四、对象、接口"><a href="#四、对象、接口" class="headerlink" title="四、对象、接口"></a>四、对象、接口</h4><p><strong>1、封装</strong></p><p><strong>注意：构造函数直接声明的时候，var这个关键字必须要有</strong></p><p>很厉害啊，声明对象，直接可以把参数填进去，不用声明字段了，直接可以获取到这个类的字段值，Kotlin可以不用写分号也是很简单的</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//这就声明好了一个类了</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rect</span></span>(<span class="keyword">var</span> width:<span class="built_in">Int</span>,<span class="keyword">var</span> height:<span class="built_in">Int</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是声明了一个带有函数的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Girl</span></span>(<span class="keyword">var</span> character:String,<span class="keyword">var</span> voice:String)&#123;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">cry</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(<span class="string">"哭了"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">smile</span><span class="params">()</span></span>&#123;</span><br><span class="line">        println(<span class="string">"笑了"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">var</span> rect1=Rect(<span class="number">5</span>,<span class="number">10</span>)</span><br><span class="line">    println(<span class="string">"矩形的宽度<span class="subst">$&#123;rect1.width&#125;</span>"</span>)</span><br><span class="line">    println(<span class="string">"矩形的高度<span class="subst">$&#123;rect1.height&#125;</span>"</span>)</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">var</span> girl1=Girl(<span class="string">"彪悍"</span>,<span class="string">"甜美"</span>)</span><br><span class="line">    println(<span class="string">"这位妹子的性格<span class="subst">$&#123;girl1.character&#125;</span>,长相<span class="subst">$&#123;girl1.voice&#125;</span>"</span>)</span><br><span class="line">    girl1.smile()</span><br><span class="line">    girl1.cry()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// private 关键字，私有化，这个和java是一样的</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">setMotorSpeed</span><span class="params">(mode:<span class="type">Int</span>)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  println(<span class="string">"当前发动机转速为<span class="subst">$&#123;mode&#125;</span>圈/秒"</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、继承</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> character:String=<span class="string">"内向"</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">open</span> <span class="function"><span class="keyword">fun</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">println(<span class="string">"公共场所喜欢大声喧哗"</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> :<span class="type">Father</span></span>() &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  println(<span class="string">"儿子很乖，不在公共场所喧哗"</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>父类要被继承需要有关键字open，子类继承时，直接冒号加父类名字</strong></p><p><strong>父类方法要被继承，同样要有关键字open，子类继承时，方法名前有一个override关键字</strong></p><p><strong>3、抽象类和多态</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> var_declear</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>(<span class="keyword">var</span> name: String) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">abstract</span> <span class="function"><span class="keyword">fun</span> <span class="title">eat</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> var_declear</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意子类，继承的时候，参数不用var关键字</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span></span>(name:String):Human(name) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">println(<span class="string">"<span class="subst">$&#123;name&#125;</span>大口大口的吃"</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> man=Man(<span class="string">"小张"</span>)</span><br><span class="line"></span><br><span class="line">man.eat()</span><br></pre></td></tr></table></figure><p><strong>4、接口</strong></p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Fly</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">fun</span> <span class="title">flying</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bird</span>:<span class="type">Fly &#123;</span></span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">flying</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">println(<span class="string">"鸟儿可以飞"</span>)</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bird=Bird()</span><br><span class="line"></span><br><span class="line">bird.flying()</span><br></pre></td></tr></table></figure><hr><h5 id="部分测试代码"><a href="#部分测试代码" class="headerlink" title="部分测试代码"></a><font size="5" color="#5A25A2">部分测试代码</font></h5><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> pi = <span class="number">3.1415926f</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">(args: <span class="type">Array</span>&lt;<span class="type">String</span>&gt;)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> name = <span class="string">"张三"</span></span><br><span class="line">    name = <span class="string">"李四"</span></span><br><span class="line">    print(name)</span><br><span class="line">    diaryGenter(<span class="string">"中山公园"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> nums = <span class="number">1</span>..<span class="number">100</span></span><br><span class="line">    <span class="keyword">for</span> (num <span class="keyword">in</span> nums) &#123;</span><br><span class="line"><span class="comment">//        print("$&#123;num&#125;,")</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//集合</span></span><br><span class="line">    listTest()</span><br><span class="line">    println()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数和函数式表达式</span></span><br><span class="line">    <span class="keyword">var</span> result = functionTest(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">    println(result)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> result2 = functionTest2(<span class="number">3</span>, <span class="number">5</span>)</span><br><span class="line">    println(result2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> functionTest3 = &#123; x: <span class="built_in">Int</span>, y: <span class="built_in">Int</span> -&gt; x + y &#125;</span><br><span class="line">    println(functionTest3(<span class="number">3</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> functionTest4: (<span class="built_in">Int</span>, <span class="built_in">Int</span>) -&gt; <span class="built_in">Int</span> = &#123; x, y -&gt; x + y &#125;</span><br><span class="line">    println(functionTest4(<span class="number">3</span>, <span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//默认参数、具名参数,默认参数就是声明完参数名和参数类型后，追加一个默认值,具名参数就是需要显示声明给哪个参数赋值</span></span><br><span class="line">    println(circleSqure(radius = <span class="number">1f</span>))</span><br><span class="line">    println(circleSqure(<span class="number">1f</span>, <span class="number">2f</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符串转数字</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//尾递归优化 tailrec关键字</span></span><br><span class="line">    println(ollAdd(<span class="number">10</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">checkAge</span><span class="params">(age: <span class="type">Int</span>)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">diaryGenter</span><span class="params">(name: <span class="type">String</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> template = <span class="string">"""我们去<span class="subst">$&#123;name&#125;</span>玩，晴空万里 """</span></span><br><span class="line"><span class="string">    print(template)</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">/**</span></span><br><span class="line"><span class="string">* 集合</span></span><br><span class="line"><span class="string">*/</span></span><br><span class="line"><span class="string">fun listTest() &#123;</span></span><br><span class="line"><span class="string">    var lists = listOf("买鸡蛋", "买大米", "买杜蕾斯")</span></span><br><span class="line"><span class="string">    for (data in lists) &#123;</span></span><br><span class="line"><span class="string">        print("<span class="subst">$&#123;data&#125;</span>" + ",")</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fun functionTest(x: Int, y: Int): Int &#123;</span></span><br><span class="line"><span class="string">    return x + y</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fun functionTest2(x: Int, y: Int) = x + y</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fun circleSqure(pai: Float = pi, radius: Float) = pi * radius * radius</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fun ollAdd(num: Int): Int &#123;</span></span><br><span class="line"><span class="string">//    println("第<span class="subst">$&#123;num&#125;</span>次计算")</span></span><br><span class="line"><span class="string">    if (num == 1) &#123;</span></span><br><span class="line"><span class="string">        return 1</span></span><br><span class="line"><span class="string">    &#125; else &#123;</span></span><br><span class="line"><span class="string">        return num + ollAdd(num - 1)</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>求根号 Math.sqrt()</li><li>幂函数 Math.pow</li></ul><hr>]]></content>
      
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kotlin开篇</title>
      <link href="/551142794/"/>
      <url>/551142794/</url>
      
        <content type="html"><![CDATA[<h4 id="一、Kotlin是什么"><a href="#一、Kotlin是什么" class="headerlink" title="一、Kotlin是什么"></a>一、Kotlin是什么</h4><p>Kotlin是一种在<font color="#A52A52"><b>Java虚拟机上运行</b></font>的静态类型编程语言，被称之为Android世界的Swift，由JetBrains设计开发并开源。</p><p>在Google I/O 2017中，Google宣布Kotlin成为Android官方开发语言</p><h6 id="静态类型编程语言和动态类型编程语言的区别"><a href="#静态类型编程语言和动态类型编程语言的区别" class="headerlink" title="静态类型编程语言和动态类型编程语言的区别"></a>静态类型编程语言和动态类型编程语言的区别</h6><table><thead><tr><th align="center">区别</th><th>静态类型编程语言</th><th>动态类型编程语言</th></tr></thead><tbody><tr><td align="center">定义</td><td><font color="#A52A52">编译时检查数据类型</font>，即写程序时要声明所有变量的数据类型</td><td><font color="#A52A52">运行时检查数据类型</font>，即写程序时不需要声明变量的数据类型，它会在赋值的时候将变量的数据类型保存下来</td></tr><tr><td align="center">代表语言</td><td>Java，C，C++，Kotlin</td><td>Python</td></tr></tbody></table><p>Kotlin属于静态类型编程语言，这意味着，每个类型表达式在编译阶段就确定了，但是，和Java不一样的是，Kotlin可以在上下文中自动决定一个变量的类型，也就是在声明的时候不用指定具体的变量类型，这个叫做<i>类型推导</i></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var name&#x3D;&quot;张三&quot;</span><br></pre></td></tr></table></figure><p>使用var声明一个变量张三，会自动推导出这个变量为string类型</p><h4 id="二、为什么要用Kotlin，Kotlin的优势在哪里？"><a href="#二、为什么要用Kotlin，Kotlin的优势在哪里？" class="headerlink" title="二、为什么要用Kotlin，Kotlin的优势在哪里？"></a>二、为什么要用Kotlin，Kotlin的优势在哪里？</h4><ul><li>代码简洁：减少样板代码的数量</li><li>空指针安全</li><li>完全兼容Java</li><li>互操作性：充分利用JVM、Android和浏览器现有的库</li></ul><h4 id="三、Kotlin的特性有哪些"><a href="#三、Kotlin的特性有哪些" class="headerlink" title="三、Kotlin的特性有哪些"></a>三、Kotlin的特性有哪些</h4><ul><li>后缀名.kt</li><li>函数式编程</li><li>免费、开源</li></ul><h4 id="四、编译Kotlin代码"><a href="#四、编译Kotlin代码" class="headerlink" title="四、编译Kotlin代码"></a>四、编译Kotlin代码</h4><p>Kotlin源码通常存放在带有 .kt 后缀的文件中。<br>Kotlin编译器分析源码并生成 .class 文件，就像Java编译那样。<br>生成的 .class 文件会被打包然后使用你使用的应用类型的标准流程执行。<br>在最简单的情景中，你可以使用 kotlinc 命令从命令行来编译你的代码，然后使用 java 命令 来执行你的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kotlinc &lt;source file or directory&gt; -include-runtime -d &lt;jar name&gt; </span><br><span class="line">java -jar &lt;jar name&gt;</span><br></pre></td></tr></table></figure><p>Kotlin构建流程图</p><p><img src="https://note.youdao.com/yws/public/resource/3b9b628826374bde6529ff84264f02b1/xmlnote/EE859F9A0CAE468083548625EAC02C1D/108" alt="kotlin构建流程"></p><p>使用Kotlin编译器编译的代码依赖于Kotlin 运行时库。它包含了Kotlin标准类库的定义和Kotlin 添加到标准Java API中的扩展。运行时库需要发放到你的应用中。 在大多数现实生活场景中，你可能会使用像Maven、Gradle或者Ant这样的构建系统来编译 你的代码。Kotlin跟所有的这些构建系统都是兼容的。我们将会在附录A中详细讨论。所有的 这些构建系统也都支持由Kotlin和Java组成的混合语言项目。Mave和Gradl也会处理包含 Kotlin运行库作为你的应用的依赖</p><p><em>ps.第四小节摘录《Kotlin_in_Action__MEAP_zh》</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EventBus原理</title>
      <link href="/4267614495/"/>
      <url>/4267614495/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"/><h4 id="整理了一份EventBus原理的思维导图，个人觉得这个导图还是有助于理清逻辑的"><a href="#整理了一份EventBus原理的思维导图，个人觉得这个导图还是有助于理清逻辑的" class="headerlink" title="整理了一份EventBus原理的思维导图，个人觉得这个导图还是有助于理清逻辑的"></a>整理了一份EventBus原理的思维导图，个人觉得这个导图还是有助于理清逻辑的</h4><p>EventBus是一种发布、订阅的事件总线框架，基于观察者模式，将消息的发送者、处理者分开，简化了组件之间的通信，提高了通信效率</p><p><em>该导图的完成，有赖于<a href="https://www.jianshu.com/p/d9516884dbd4" target="_blank" rel="noopener">这位网友</a>的分析文章</em></p><p><img src="https://note.youdao.com/yws/public/resource/b3288c1dee028e75dd6355491528ec7f/xmlnote/FA257359384F4BE7A8C56004EDFFD016/85" alt="eventbus原理图"></p><p><a href="http://note.youdao.com/noteshare?id=58e5813df58e37ba34f4111595e19324" target="_blank" rel="noopener">附件链接</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Android第三方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android工作中的总结</title>
      <link href="/58505651/"/>
      <url>/58505651/</url>
      
        <content type="html"><![CDATA[<h3 id="AndroidTrack认识"><a href="#AndroidTrack认识" class="headerlink" title="AndroidTrack认识"></a>AndroidTrack认识</h3><p>终于找到一个开源的可以正确播放我录的wav文件了，真的是太不容易了</p><p><a href="https://github.com/zhangliangming/Android_AudioPlayer/tree/master/libs" target="_blank" rel="noopener">https://github.com/zhangliangming/Android_AudioPlayer/tree/master/libs</a></p><p>还是github帮了我大忙<br>感谢开源拯救了我，开源我的大爱</p><p>嗯，用英文搜索有时候能得到不同的答案</p><h3 id="wav如何在播放前获取播放时长"><a href="#wav如何在播放前获取播放时长" class="headerlink" title="wav如何在播放前获取播放时长"></a>wav如何在播放前获取播放时长</h3><p><a href="http://blog.csdn.net/91program/article/details/2539636" target="_blank" rel="noopener">http://blog.csdn.net/91program/article/details/2539636</a></p><p>直接读取wav文件头信息，从文件起始地址偏移28个字节长度为4个字节保存的是每秒钟播放的字节数，从文件起始地址偏移40个字节长度为4个字节保存的是声音数据的总的字节数，相除就是播放时间</p><p>采样率：就是对声音信息1秒钟采样多少次，以记录成数字信息。如CD音频是44.1KHz采样率，它对声音以每秒44100次的频率来记录信息。原则上采样率越高，声音的质量越好</p><a id="more"></a><hr><h3 id="键盘把布局顶起来的解决办法"><a href="#键盘把布局顶起来的解决办法" class="headerlink" title="键盘把布局顶起来的解决办法"></a>键盘把布局顶起来的解决办法</h3><p>方法一：在你的activity中的oncreate中setContentView之前写上这个代码getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);</p><p><a href="http://blog.csdn.net/szming_blog/article/details/45442233" target="_blank" rel="noopener">http://blog.csdn.net/szming_blog/article/details/45442233</a></p><h3 id="Fragment-tab生命周期不调用的解决"><a href="#Fragment-tab生命周期不调用的解决" class="headerlink" title="Fragment+tab生命周期不调用的解决"></a>Fragment+tab生命周期不调用的解决</h3><p><a href="http://blog.csdn.net/csdn_aiyang/article/details/78054709?locationNum=10&fps=1" target="_blank" rel="noopener">http://blog.csdn.net/csdn_aiyang/article/details/78054709?locationNum=10&amp;fps=1</a></p><h3 id="apk混淆"><a href="#apk混淆" class="headerlink" title="apk混淆"></a>apk混淆</h3><p><a href="https://www.jianshu.com/p/d7b7e903cfa7" target="_blank" rel="noopener">https://www.jianshu.com/p/d7b7e903cfa7</a><br/><br><a href="https://www.jianshu.com/p/7436a1a32891" target="_blank" rel="noopener">https://www.jianshu.com/p/7436a1a32891</a></p><hr><h3 id="Android定位"><a href="#Android定位" class="headerlink" title="Android定位"></a>Android定位</h3><p>Network:定位快，准确度低，受环境影响小。 GPS：定位慢，准确度高，受环境影响大。 <br><br><a href="http://blog.csdn.net/itleaks/article/details/31511105" target="_blank" rel="noopener">http://blog.csdn.net/itleaks/article/details/31511105</a></p><p><a href="http://blog.csdn.net/luosiye312/article/details/50562309" target="_blank" rel="noopener">三种定位方式</a></p><hr><h3 id="点9图片制作"><a href="#点9图片制作" class="headerlink" title="点9图片制作"></a>点9图片制作</h3><p><img src="https://i.loli.net/2017/12/28/5a44bb4a7fc96.png" alt=""></p><hr><h3 id="Android通知栏"><a href="#Android通知栏" class="headerlink" title="Android通知栏"></a>Android通知栏</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知栏</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showNotification2</span><span class="params">(Context context, <span class="keyword">int</span> id, String title, String text, <span class="keyword">boolean</span> ifOpen)</span> </span>&#123;</span><br><span class="line">        MyLog.i(TAG,<span class="string">"showNotification2()"</span>);</span><br><span class="line">        NotificationCompat.Builder builder = <span class="keyword">new</span> NotificationCompat.Builder(context);</span><br><span class="line">        builder.setSmallIcon(R.drawable.ic_launcher);</span><br><span class="line">        builder.setContentTitle(title);</span><br><span class="line">        builder.setContentText(text);</span><br><span class="line">        builder.setAutoCancel(<span class="keyword">true</span>);</span><br><span class="line">        builder.setOnlyAlertOnce(<span class="keyword">true</span>);</span><br><span class="line">        builder.setTicker(<span class="string">"门磁防护通知"</span>);</span><br><span class="line">        <span class="comment">// 需要VIBRATE权限</span></span><br><span class="line">        builder.setDefaults(Notification.DEFAULT_VIBRATE);</span><br><span class="line">        builder.setPriority(Notification.PRIORITY_DEFAULT);</span><br><span class="line">        builder.setPriority(Notification.PRIORITY_DEFAULT);<span class="comment">// 设置该通知优先级</span></span><br><span class="line">        <span class="comment">// Creates an explicit intent for an Activity in your app</span></span><br><span class="line">        <span class="comment">//自定义打开的界面</span></span><br><span class="line">        Intent resultIntent = <span class="keyword">new</span> Intent(context, BatteryPoweredContactSensorInfoActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"><span class="comment">//        resultIntent.putExtra(DEVICE_ID_KEY, mCurrentBatteryPoweredContactSensor.getId());</span></span><br><span class="line">        resultIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">        PendingIntent contentIntent = PendingIntent.getActivity(context, <span class="number">0</span>,</span><br><span class="line">                resultIntent, PendingIntent.FLAG_UPDATE_CURRENT);</span><br><span class="line">        builder.setContentIntent(contentIntent);</span><br><span class="line">          NotificationManager notificationManager = (NotificationManager) context</span><br><span class="line">            .getSystemService(Context.NOTIFICATION_SERVICE);</span><br><span class="line">    notificationManager.notify(<span class="string">"1"</span>, id, builder.build());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知栏</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> title</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> text</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showNotification</span><span class="params">(Context context, <span class="keyword">int</span> id, String title, String text, <span class="keyword">boolean</span> ifOpen)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//自定义通知栏布局</span></span><br><span class="line">        RemoteViews mRemoteViews = <span class="keyword">new</span> RemoteViews(getPackageName(), R.layout.view_custom_notification);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        String currentTime = DateTool.exchangeStringTime2(DateTool.getSpecifiedTime3(Calendar.getInstance()));</span><br><span class="line">        mRemoteViews.setTextViewText(R.id.tv_notification_time, currentTime);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    mRemoteViews.setTextViewText(R.id.tv_notification_info, text);</span><br><span class="line">    mRemoteViews.setTextViewText(R.id.tv_notification_app_name, title);</span><br><span class="line">    mRemoteViews.setTextColor(R.id.tv_notification_info, Color.BLACK);</span><br><span class="line">    NotificationCompat.Builder builder = <span class="keyword">new</span> NotificationCompat.Builder(context);</span><br><span class="line">    builder.setContent(mRemoteViews)</span><br><span class="line">            .setWhen(System.currentTimeMillis())<span class="comment">// 通知产生的时间，会在通知信息里显示</span></span><br><span class="line">            .setPriority(Notification.PRIORITY_DEFAULT)<span class="comment">// 设置该通知优先级</span></span><br><span class="line">            .setOngoing(<span class="keyword">true</span>)</span><br><span class="line">            .setShowWhen(<span class="keyword">false</span>)</span><br><span class="line">            .setTicker(<span class="string">"有新的软件更新"</span>)</span><br><span class="line">            .setSmallIcon(R.drawable.ic_launcher);<span class="comment">//这个属性是自定义通知里面必须要传递的，否则通知不显示</span></span><br><span class="line">    builder.setAutoCancel(<span class="keyword">true</span>);</span><br><span class="line">    builder.setOnlyAlertOnce(<span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">// 需要VIBRATE权限</span></span><br><span class="line">    builder.setDefaults(Notification.DEFAULT_VIBRATE);</span><br><span class="line">    builder.setPriority(Notification.PRIORITY_DEFAULT);</span><br><span class="line">    <span class="comment">// Creates an explicit intent for an Activity in your app</span></span><br><span class="line">    <span class="comment">//自定义打开的界面</span></span><br><span class="line">    <span class="comment">//TODO 这个打开的页面需要确定</span></span><br><span class="line">    Intent resultIntent = <span class="keyword">new</span> Intent(context, BatteryPoweredContactSensorInfoActivity<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    resultIntent.putExtra(DEVICE_ID_KEY, mCurrentBatteryPoweredContactSensor.getId());</span><br><span class="line">    resultIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">    PendingIntent contentIntent = PendingIntent.getActivity(context, <span class="number">0</span>,</span><br><span class="line">            resultIntent, PendingIntent.FLAG_UPDATE_CURRENT);</span><br><span class="line">    builder.setContentIntent(contentIntent);</span><br><span class="line"></span><br><span class="line">    NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);</span><br><span class="line">    MyLog.i(TAG, <span class="string">"id:"</span> + id);</span><br><span class="line">    <span class="comment">//TODO 这个显示多个通知条目前还有问题，单个设备的时候，下面代码可以用，多个代码的时候，这个代码可能不太对</span></span><br><span class="line">    <span class="keyword">if</span> (ifOpen) &#123;</span><br><span class="line">        notificationManager.cancelAll();</span><br><span class="line">    &#125;</span><br><span class="line">    notificationManager.notify(mCurrentBatteryPoweredContactSensor.getId(), id, builder.build());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="AndroidStudio断点调试"><a href="#AndroidStudio断点调试" class="headerlink" title="AndroidStudio断点调试"></a>AndroidStudio断点调试</h3><p>step over F8 执行下一行代码<br><br>Step Out F7 跳出方法或者下一个断点</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git命令基本使用</title>
      <link href="/2021401606/"/>
      <url>/2021401606/</url>
      
        <content type="html"><![CDATA[<h3 id="1、git基本命令"><a href="#1、git基本命令" class="headerlink" title="1、git基本命令"></a>1、git基本命令</h3><ul><li><p>查看本地分支</p><pre><code>$ git branch  </code></pre></li><li><p>查看远程分支</p><pre><code>$ git branch -a    master  * mutilrecall    remotes/origin/master    remotes/origin/mutilrecall  </code></pre></li><li><p>创建本地分支，并切换到分支：</p><pre><code>$ git branch test  kevinliu@TP-A1116-L MINGW64 /e/workspace_ttengine/ttengine (mutilrecall)  $ git checkout test  Switched to branch &apos;test&apos;  </code></pre></li><li><p>关联服务器分支<br/></p><pre><code>$ git checkout -b 20180105aaa origin/20180105aaa</code></pre></li><li><p>删除文件夹 <a id="more"></a></p><pre><code>$ git rm -r -f .idea</code></pre></li><li><p>删掉.gitignore文件</p><pre><code>git rm --cache -r -f .gitignore</code></pre></li><li><p>添加文件</p><pre><code>git add .</code></pre></li><li><p>提交</p><pre><code>git commit -m &quot;去掉.gitignore文件&quot;</code></pre></li><li><p>提交到服务器</p><pre><code>git push origin 20180105branchone</code></pre></li></ul><h3 id="2、git添加忽略文件"><a href="#2、git添加忽略文件" class="headerlink" title="2、git添加忽略文件"></a>2、git添加忽略文件</h3><p><a href="http://blog.csdn.net/wangjiang_qianmo/article/details/51131134" target="_blank" rel="noopener">http://blog.csdn.net/wangjiang_qianmo/article/details/51131134</a></p><h3 id="3、git查看配置的用户名和邮箱"><a href="#3、git查看配置的用户名和邮箱" class="headerlink" title="3、git查看配置的用户名和邮箱"></a>3、git查看配置的用户名和邮箱</h3><pre><code>$ git config user.namejOOO$ git config user.email1131836757@qq.com</code></pre><h3 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h3><ul><li><p>git 提交出现问题You have not concluded your merge (MERGE_HEAD exists).</p><p>  <a href="http://yijiebuyi.com/blog/5b55eb51ad49ce41e2de9c85dd4513ca.html" target="_blank" rel="noopener">http://yijiebuyi.com/blog/5b55eb51ad49ce41e2de9c85dd4513ca.html</a></p><p>  <a href="https://yq.aliyun.com/articles/38130" target="_blank" rel="noopener">https://yq.aliyun.com/articles/38130</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java基础</title>
      <link href="/3098602189/"/>
      <url>/3098602189/</url>
      
        <content type="html"><![CDATA[<h2 id="1、复制数组方法-System-arraycopy"><a href="#1、复制数组方法-System-arraycopy" class="headerlink" title="1、复制数组方法 System.arraycopy"></a>1、复制数组方法 System.arraycopy</h2><pre> public static void arraycopy(Object src, int srcPos, Object dest, int destPos, int length)下面是 System.arrayCopy的源代码声明 : 代码解释:　　Object src : 原数组   int srcPos : 从元数据的起始位置开始　　Object dest : 目标数组　　int destPos : 目标数组的开始起始位置　　int length  : 要copy的数组的长度</pre> <h3 id="2、三目运算符"><a href="#2、三目运算符" class="headerlink" title="2、三目运算符"></a>2、三目运算符</h3><p>三目运算符 (表达式1)?(表达式2):(表达式3)，计算方法是这样的：表达式1是一个逻辑表达式，如果其值为true，则整个表达式的值为表达式2的值，否则为表达式3的值</p><p>例子：int i = (5 &gt; 3) ? (5 + 3) : (5 - 3);结果为i = 8.因为5 &gt; 3为true，所以i = 5 + 3.<br>##</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>生活中常用的软件</title>
      <link href="/72219077/"/>
      <url>/72219077/</url>
      
        <content type="html"><![CDATA[<h3 id="1、markdown破解版地址"><a href="#1、markdown破解版地址" class="headerlink" title="1、markdown破解版地址"></a>1、markdown破解版地址</h3><p><a href="http://www.3322.cc/soft/16069.html#xzdz" target="_blank" rel="noopener">http://www.3322.cc/soft/16069.html#xzdz</a></p><h3 id="2、Scroll-Reveser"><a href="#2、Scroll-Reveser" class="headerlink" title="2、Scroll Reveser"></a>2、Scroll Reveser</h3><p>软件说明：这个软件可以设置你的普通鼠标的滚轮方向，我们都知道，在mac的自带的设置滚动方向设置成自然之后，鼠标滚动的方向很不习惯，但是取消自然方向之后，滚轮的方向又和之前在windows上不一样了，这个软件的作用就是触控板的方向和鼠标滚轮的方向分开来了</p><p>官网下载地址：<a href="https://pilotmoon.com/scrollreverser/" target="_blank" rel="noopener">https://pilotmoon.com/scrollreverser/</a></p><p><img src="https://note.youdao.com/yws/public/resource/e4a7f7ba6382871eaa692f2a88d665ec/xmlnote/CB826DF69B0B4BB39FC7885DE952E351/52" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AndroidStudio环境相关</title>
      <link href="/1414339353/"/>
      <url>/1414339353/</url>
      
        <content type="html"><![CDATA[<h3 id="AndroidStudio导入第三方类库源码方法"><a href="#AndroidStudio导入第三方类库源码方法" class="headerlink" title="AndroidStudio导入第三方类库源码方法"></a>AndroidStudio导入第三方类库源码方法</h3><pre><code>http://www.jianshu.com/p/feb3a03d1892</code></pre><h3 id="AndroidStudio3-0编译问题"><a href="#AndroidStudio3-0编译问题" class="headerlink" title="AndroidStudio3.0编译问题"></a>AndroidStudio3.0编译问题</h3><p>问题：All flavors must now belong to a named flavor dimension. Learn more at <a href="https://d.android.com/r/tool" target="_blank" rel="noopener">https://d.android.com/r/tool</a><br/><br>解决方案：<br></p><pre> defaultConfig {    targetSdkVersion：***    minSdkVersion ：***    versionCode：***    versionName ：***    //版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了    flavorDimensions "versionCode"}</pre><p>相关文章：<a href="http://blog.csdn.net/u012893747/article/details/78677354" target="_blank" rel="noopener">http://blog.csdn.net/u012893747/article/details/78677354</a></p><h3 id="androidStudio插件使用"><a href="#androidStudio插件使用" class="headerlink" title="androidStudio插件使用"></a>androidStudio插件使用</h3><p><a href="http://blog.csdn.net/lyj1005353553/article/details/55100563" target="_blank" rel="noopener">http://blog.csdn.net/lyj1005353553/article/details/55100563</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java常用工具类</title>
      <link href="/2337322342/"/>
      <url>/2337322342/</url>
      
        <content type="html"><![CDATA[<h3 id="byte数组转十六进制字符数组"><a href="#byte数组转十六进制字符数组" class="headerlink" title="byte数组转十六进制字符数组"></a>byte数组转十六进制字符数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * byte数组转换成16进制字符数组</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> src</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String[] bytesToHexStrings(<span class="keyword">byte</span>[] src) &#123;</span><br><span class="line"><span class="keyword">if</span> (src == <span class="keyword">null</span> || src.length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">String[] str = <span class="keyword">new</span> String[src.length];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; src.length; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> v = src[i] &amp; <span class="number">0xFF</span>;</span><br><span class="line">String hv = Integer.toHexString(v);</span><br><span class="line"><span class="keyword">if</span> (hv.length() &lt; <span class="number">2</span>) &#123;</span><br><span class="line">str[i] = <span class="string">"0"</span>;</span><br><span class="line">&#125;</span><br><span class="line">str[i] = hv;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo+github搭建个人博客教程</title>
      <link href="/315065493/"/>
      <url>/315065493/</url>
      
        <content type="html"><![CDATA[<h3 id="一、hexo常用命令"><a href="#一、hexo常用命令" class="headerlink" title="一、hexo常用命令"></a>一、hexo常用命令</h3><pre><code>hexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #部署到GitHubhexo help  #查看帮助hexo version  #查看Hexo的版本</code></pre><h4 id="1-缩写："><a href="#1-缩写：" class="headerlink" title="1.缩写："></a>1.缩写：</h4><pre><code>hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy</code></pre><h4 id="2-组合命令"><a href="#2-组合命令" class="headerlink" title="2.组合命令"></a>2.组合命令</h4><pre><code>hexo s -g #生成并本地预览hexo d -g #生成并上传</code></pre><h4 id="3-创建一篇新的博客步骤"><a href="#3-创建一篇新的博客步骤" class="headerlink" title="3.创建一篇新的博客步骤"></a>3.创建一篇新的博客步骤</h4><a id="more"></a><pre><code>1、进入到FirstHexo文件根目录2、右键git bash here（windows下操作）3、使用命令 hexo new 文章名4、hexo generate生成静态页面至public目录5、hexo server 在本地查看是否生成6、hexo d 将文章发布到github上面</code></pre><p>注意：一些非md文件可以把他们放到source文件夹下，这里的所有文件都会原样复制（除了md文件）到public目录的</p><h4 id="4-阅读全文功能"><a href="#4-阅读全文功能" class="headerlink" title="4.阅读全文功能"></a>4.阅读全文功能</h4><p>在编辑文章时，适当位置添加 一下代码 ，这样可以避免在首页列表文章的全部内容都显示出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><h4 id="5-评论功能"><a href="#5-评论功能" class="headerlink" title="5.评论功能"></a>5.评论功能</h4><p>1、使用第三方来必力可以实现，这个有登录功能，这个配置很简单，网上有教程，我一直没有实现的问题，在于Hexo默认的的Disqus的配置我是打开的，enable:false才对，搞了有一个多小时的时间，找不到原因在哪里，现在静下来心去看这个_config.xml文件突然发现它是打开的，然后关掉之后，立马裕兴出来了</p><img src="https://note.youdao.com/yws/public/resource/b3288c1dee028e75dd6355491528ec7f/xmlnote/B685B3DA86674B55839E86749A11BDBC/119" alt="Disqus" style="zoom:50%;" /><p>2、使用valine也可以，这个就是不登录也可以评论，个人感觉不是很好，配置也不难</p><h4 id="6-阅读统计"><a href="#6-阅读统计" class="headerlink" title="6.阅读统计"></a>6.阅读统计</h4><p>这个使用不蒜子</p><hr><h3 id="二、其他配置"><a href="#二、其他配置" class="headerlink" title="二、其他配置"></a>二、其他配置</h3><h4 id="1-添加统计功能"><a href="#1-添加统计功能" class="headerlink" title="1.添加统计功能"></a>1.添加统计功能</h4><pre><code>我是在根据这个页面来添加的，采用的是最简单的计算网站访问量http://ibruce.info/2015/04/04/busuanzi/</code></pre><h4 id="2-添加图片"><a href="#2-添加图片" class="headerlink" title="2.添加图片"></a>2.添加图片</h4><p><em>我目前采用的是，将图片有道云笔记上，然后将该笔记共享出去，获取图片的链接，然后再引用到文章里面，后期可能会采取图床加云服务器的方式</em></p><pre><code>http://www.cnblogs.com/jarson-7426/p/5515870.html</code></pre><h4 id="3-站内关键字搜索"><a href="#3-站内关键字搜索" class="headerlink" title="3.站内关键字搜索"></a>3.站内关键字搜索</h4><pre><code>http://www.tuicool.com/articles/ZRZnErq</code></pre><h4 id="4-分类和标签"><a href="#4-分类和标签" class="headerlink" title="4.分类和标签"></a>4.分类和标签</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: 测试页面</span><br><span class="line">date: 2018-06-06 00:13:22</span><br><span class="line">tags: </span><br><span class="line">- 资讯</span><br><span class="line">type: &quot;categories&quot; ##这个“categories”是固定的，不能改名</span><br><span class="line">categories: Testing ##该文章被分类整理在Testing下</span><br><span class="line">comments: true ##是否开启评论</span><br></pre></td></tr></table></figure><hr><h3 id="外链推荐"><a href="#外链推荐" class="headerlink" title="外链推荐"></a>外链推荐</h3><p>第一次使用hexo的推荐教程文章：</p><p><a href="http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p><p><a href="http://sanwen.net/a/bwimzoo.html" target="_blank" rel="noopener">http://sanwen.net/a/bwimzoo.html</a></p><p><a href="http://www.jianshu.com/p/bcdbe7347c8d" target="_blank" rel="noopener">http://www.jianshu.com/p/bcdbe7347c8d</a></p><p>next使用：</p><p><a href="http://blog.csdn.net/zuoziji416/article/details/53204478" target="_blank" rel="noopener">http://blog.csdn.net/zuoziji416/article/details/53204478</a><br><a href="https://segmentfault.com/a/1190000010881874" target="_blank" rel="noopener">https://segmentfault.com/a/1190000010881874</a></p><p>其他推荐：</p><p><a href="http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p><p><a href="http://blog.csdn.net/lijiajun95/article/details/53862528" target="_blank" rel="noopener">http://blog.csdn.net/lijiajun95/article/details/53862528</a></p><p><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">https://segmentfault.com/a/1190000009544924</a></p><p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next主题官方使用教程</a></p><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方使用教程</a></p><p>next常见问题解决</p><p><a href="https://blog.csdn.net/shuiyunxc/article/details/104150894" target="_blank" rel="noopener">https://blog.csdn.net/shuiyunxc/article/details/104150894</a></p><p><a href="https://blog.csdn.net/weixin_43790779/article/details/104854588" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43790779/article/details/104854588</a></p><p>Hexo 添加标签云</p><p><a href="https://www.jianshu.com/p/2bb36378045d" target="_blank" rel="noopener">https://www.jianshu.com/p/2bb36378045d</a></p><p>hexo 下的分类和表签无法显示，怎么解决？</p><p><a href="https://www.zhihu.com/question/29017171" target="_blank" rel="noopener">https://www.zhihu.com/question/29017171</a></p><p><a href="https://www.jianshu.com/p/f138032e7539" target="_blank" rel="noopener">https://www.jianshu.com/p/f138032e7539</a></p><p>hexo博客优化之文章置顶+置顶标签</p><p><a href="https://blog.csdn.net/qwerty200696/article/details/79010629" target="_blank" rel="noopener">https://blog.csdn.net/qwerty200696/article/details/79010629</a></p><p>修改标签#号</p><p><a href="https://www.jianshu.com/p/41bf7ebeafdc" target="_blank" rel="noopener">https://www.jianshu.com/p/41bf7ebeafdc</a></p><p>来比力评论功能教程</p><p><a href="https://www.jianshu.com/p/61abc6c43220" target="_blank" rel="noopener">https://www.jianshu.com/p/61abc6c43220</a></p><p>Hexo使用不蒜子统计功能失效问题解决</p><p><a href="https://www.jianshu.com/p/089762f90e1c" target="_blank" rel="noopener">https://www.jianshu.com/p/089762f90e1c</a></p><p>Hexo添加字数统计、阅读时长</p><p><a href="https://www.cnblogs.com/php-linux/p/8418518.html" target="_blank" rel="noopener">https://www.cnblogs.com/php-linux/p/8418518.html</a></p><p>底部版权修改</p><p><a href="https://www.jianshu.com/p/4fbc57269f1b" target="_blank" rel="noopener">https://www.jianshu.com/p/4fbc57269f1b</a></p><p>Seo优化</p><p><a href="https://blog.csdn.net/lansus/article/details/89641760" target="_blank" rel="noopener">https://blog.csdn.net/lansus/article/details/89641760</a></p><p><a href="https://www.jianshu.com/p/3a05351a37dc" target="_blank" rel="noopener">https://www.jianshu.com/p/3a05351a37dc</a></p><p>解决Hexo博客引用网络图片无法显示的问题</p><p><a href="https://blog.csdn.net/mqdxiaoxiao/article/details/96770756" target="_blank" rel="noopener">https://blog.csdn.net/mqdxiaoxiao/article/details/96770756</a></p><p><code>&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;/&gt;</code></p><p>hexo博客url地址优化，<a href="https://link.jianshu.com/?t=https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener"> hexo-abbrlink</a></p><p><a href="https://blog.zuiyu1818.cn/posts/NexT_seourl.html" target="_blank" rel="noopener">https://blog.zuiyu1818.cn/posts/NexT_seourl.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android贝塞尔曲线初步使用</title>
      <link href="/4212393023/"/>
      <url>/4212393023/</url>
      
        <content type="html"><![CDATA[<h1 id="1、什么是贝塞尔曲线"><a href="#1、什么是贝塞尔曲线" class="headerlink" title="1、什么是贝塞尔曲线"></a>1、什么是贝塞尔曲线</h1><p><font color=#1234ff size=3>贝塞尔曲线</font>，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图像软件通过它来精确画出曲线，贝塞尔曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋，我们在绘图工具上看到的钢笔工具就是来做这种矢量曲线的(ps<br>工具里面的钢笔工具)。主要结构：起始点、终止点（也成锚点）、控制点，通过调整控制点，贝塞尔的形状会发生变化<br><br>有关贝塞尔曲线的知识：<code>http://www.html-js.com/article/1628</code></p><h1 id="2、贝塞尔曲线的分类"><a href="#2、贝塞尔曲线的分类" class="headerlink" title="2、贝塞尔曲线的分类"></a>2、贝塞尔曲线的分类</h1><p>贝塞尔曲线分为：一阶贝塞尔曲线、二阶贝塞尔曲线、三阶贝塞尔曲线、四阶、五阶……</p><a id="more"></a><h1 id="3、贝塞尔曲线简单使用"><a href="#3、贝塞尔曲线简单使用" class="headerlink" title="3、贝塞尔曲线简单使用"></a>3、贝塞尔曲线简单使用</h1><ul><li><p>一阶贝塞尔曲线<br><br>  这个非常简单，就是调用canvas的drawLine方法，传进去起点坐标、终点坐标就可以</p></li><li><p>二阶贝塞尔曲线</p><p>  以下代码是最简单的二阶贝塞尔曲线使用</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BezierView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">BezierView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 点的坐标集合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">List&lt;Float&gt; points = <span class="keyword">new</span> ArrayList&lt;Float&gt;();</span><br><span class="line"><span class="comment">// 添加第一个点(118.0, 294.0),</span></span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">118.0</span>);<span class="comment">// X轴</span></span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">294.0</span>);<span class="comment">// Y轴</span></span><br><span class="line"><span class="comment">// 添加第二个点</span></span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">206.0</span>);</span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">294.0</span>);</span><br><span class="line"><span class="comment">// 添加第三个点</span></span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">294.0</span>);</span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">118.0</span>);</span><br><span class="line"><span class="comment">// 添加第四个点</span></span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">382.0</span>);</span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">206.0</span>);</span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">470.0</span>);</span><br><span class="line">points.add((<span class="keyword">float</span>) <span class="number">118.0</span>);</span><br><span class="line"> </span><br><span class="line">Paint mPaint=<span class="keyword">new</span> Paint();</span><br><span class="line">Path mPath = <span class="keyword">new</span> Path();</span><br><span class="line">mPaint.setColor(Color.RED); <span class="comment">// 画笔颜色</span></span><br><span class="line">mPaint.setStrokeWidth(<span class="number">5</span>); <span class="comment">// 画笔宽度</span></span><br><span class="line">mPaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">mPath.reset();</span><br><span class="line"><span class="comment">// 起点</span></span><br><span class="line">mPath.moveTo(points.get(<span class="number">0</span>), points.get(<span class="number">1</span>));</span><br><span class="line"><span class="comment">// 画路径， 参数依次为控制点坐标x,y,终点坐标x,y</span></span><br><span class="line">mPath.quadTo(points.get(<span class="number">2</span>), points.get(<span class="number">3</span>),points.get(<span class="number">4</span>), points.get(<span class="number">5</span>));</span><br><span class="line"><span class="comment">// 画path</span></span><br><span class="line">canvas.drawPath(mPath, mPaint);</span><br><span class="line"><span class="comment">// 画控制点,其实这个画出来不画出来无伤大雅</span></span><br><span class="line">canvas.drawPoint(points.get(<span class="number">2</span>), points.get(<span class="number">3</span>), mPaint);</span><br><span class="line"><span class="comment">// 画线</span></span><br><span class="line">canvas.drawLine(points.get(<span class="number">0</span>), points.get(<span class="number">1</span>), points.get(<span class="number">2</span>), points.get(<span class="number">3</span>), mPaint);</span><br><span class="line">canvas.drawLine(points.get(<span class="number">4</span>), points.get(<span class="number">5</span>), points.get(<span class="number">2</span>), points.get(<span class="number">3</span>), mPaint);</span><br><span class="line">invalidate();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Android基础</title>
      <link href="/505659413/"/>
      <url>/505659413/</url>
      
        <content type="html"><![CDATA[<h3 id="1、Button的Text英文字体都是大写"><a href="#1、Button的Text英文字体都是大写" class="headerlink" title="1、Button的Text英文字体都是大写"></a>1、Button的Text英文字体都是大写</h3><p>android:textAllCaps=”false”<br><br>全为大写字母这个属性改为false</p><h3 id="2、Button字体的间距和边框间距较大的时候"><a href="#2、Button字体的间距和边框间距较大的时候" class="headerlink" title="2、Button字体的间距和边框间距较大的时候"></a>2、Button字体的间距和边框间距较大的时候</h3><p>android:layout_height=”wrap_content”<br><br>android:layout_height=”@dimen/height_45”<br><br>高度不要设置成wrap_content而是设置成具体的值<a id="more"></a></p><h3 id="3、Android完美检测键盘弹出-收起"><a href="#3、Android完美检测键盘弹出-收起" class="headerlink" title="3、Android完美检测键盘弹出/收起"></a>3、Android完美检测键盘弹出/收起</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setListenerToRootView</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">final</span> View rootView = getWindow().getDecorView().findViewById(android.R.id.content);  </span><br><span class="line">    rootView.getViewTreeObserver().addOnGlobalLayoutListener(<span class="keyword">new</span> ViewTreeObserver.OnGlobalLayoutListener() &#123;  </span><br><span class="line">        <span class="meta">@Override</span>  </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onGlobalLayout</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">            LogUtils.d(TAG, <span class="string">"[onGlobalLayout] .. in .."</span>);  </span><br><span class="line">            <span class="keyword">boolean</span> mKeyboardUp = isKeyboardShown(rootView);  </span><br><span class="line">            <span class="keyword">if</span> (mKeyboardUp) &#123;  </span><br><span class="line">                LogUtils.d(TAG, <span class="string">"键盘弹出.."</span>);  </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">                LogUtils.d(TAG, <span class="string">"键盘收起.."</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;);  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isKeyboardShown</span><span class="params">(View rootView)</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> softKeyboardHeight = <span class="number">100</span>;  </span><br><span class="line">    Rect r = <span class="keyword">new</span> Rect();  </span><br><span class="line">    rootView.getWindowVisibleDisplayFrame(r);  </span><br><span class="line">    DisplayMetrics dm = rootView.getResources().getDisplayMetrics();  </span><br><span class="line">    <span class="keyword">int</span> heightDiff = rootView.getBottom() - r.bottom;  </span><br><span class="line">    <span class="keyword">return</span> heightDiff &gt; softKeyboardHeight * dm.density;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、ListView点击条目去掉水波纹效果"><a href="#4、ListView点击条目去掉水波纹效果" class="headerlink" title="4、ListView点击条目去掉水波纹效果"></a>4、ListView点击条目去掉水波纹效果</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:listSelector</span>=<span class="string">"@android:color/transparent"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:id</span>=<span class="string">"@+id/schedule_list"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_below</span>=<span class="string">"@id/diverd_line"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    </p><h3 id="5、textView-color设置"><a href="#5、textView-color设置" class="headerlink" title="5、textView color设置"></a>5、textView color设置</h3><pre>mMinuteTip.setTextColor(Color.parseColor("#6495ED"));</pre><h3 id="6、RadioGroup"><a href="#6、RadioGroup" class="headerlink" title="6、RadioGroup"></a>6、RadioGroup</h3><p>它有一个clearCheck方法可以把所有选中的RadioButton都取消选中，不用手动对每一个RadioButton进行取消设置，而且手动取消设置还有错误</p><h3 id="7、EditText基本使用"><a href="#7、EditText基本使用" class="headerlink" title="7、EditText基本使用"></a>7、EditText基本使用</h3><ul><li><p>限制字数一行显示</p><pre>android:singleLine="true"android:maxLength="8"</pre></li><li><p>点击屏幕其他地方让EditText失去焦点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//给整体布局设置一个触摸监听事件，将焦点获取到整体布局身上</span></span><br><span class="line">ll_sprinkler_schedule_details.setOnTouchListener(<span class="keyword">new</span> View.OnTouchListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View view, MotionEvent motionEvent)</span> </span>&#123;</span><br><span class="line">            ll_sprinkler_schedule_details.setFocusable(<span class="keyword">true</span>);</span><br><span class="line">            ll_sprinkler_schedule_details.setFocusableInTouchMode(<span class="keyword">true</span>);</span><br><span class="line">            ll_sprinkler_schedule_details.requestFocus();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>光标移动到最后</p><pre>et_name.setSelection(et_name.getText().toString().length());</pre></li><li><p>获取焦点</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果对edittext组件设置了editText.setFocusable(false);需要重新获取焦点则必须执行：</span></span><br><span class="line">editText.setFocusable(ture);</span><br><span class="line">  editText.setFocusableInTouchMode(<span class="keyword">true</span>);</span><br><span class="line">  editText.requestFocus();</span><br><span class="line"> <span class="comment">// 注意：这种情况下，当重新点击文本框，是无法打开软键盘，必须点击第二次才能打开。 </span></span><br><span class="line">如果改为：</span><br><span class="line">editText.clearFocus(); 失去焦点</span><br><span class="line">editText.requestFocus();获取焦点</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>EditText增加右边图片点击事件</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">et.setOnTouchListener(<span class="keyword">new</span> OnTouchListener() &#123;</span><br><span class="line">  </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// et.getCompoundDrawables()得到一个长度为4的数组，分别表示左右上下四张图片</span></span><br><span class="line">    Drawable drawable = et.getCompoundDrawables()[<span class="number">2</span>];</span><br><span class="line">    <span class="comment">//如果右边没有图片，不再处理</span></span><br><span class="line">    <span class="keyword">if</span> (drawable == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//如果不是按下事件，不再处理</span></span><br><span class="line">    <span class="keyword">if</span> (event.getAction() != MotionEvent.ACTION_UP)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (event.getX() &gt; et.getWidth()</span><br><span class="line">  </span><br><span class="line"> - et.getPaddingRight()</span><br><span class="line">   .getIntrinsicWidth())&#123;</span><br><span class="line">             et.setText(<span class="string">""</span>);</span><br><span class="line">         &#125;</span><br><span class="line">             <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="8、ListView适配器更新"><a href="#8、ListView适配器更新" class="headerlink" title="8、ListView适配器更新"></a>8、ListView适配器更新</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(historyListAdapter==<span class="keyword">null</span>)&#123;</span><br><span class="line">    historyListAdapter = <span class="keyword">new</span> DeviceHistoryListAdapter(getActivity(), mSprinklerHistoryList);</span><br><span class="line">    historyListView.setAdapter(historyListAdapter);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    MyLog.i(TAG,<span class="string">"historyListAdapter!=null"</span>);</span><br><span class="line">    historyListView.setAdapter(historyListAdapter);<span class="comment">//要重新绑定一下数据，不然条目显示不出来</span></span><br><span class="line">    historyListAdapter.update(historyListView,mSprinklerHistoryList);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">( List&lt;SprinklerHistoryBean&gt; sprinklerHistoryList)</span></span>&#123;</span><br><span class="line">    mSprinklerHistoryList.clear();</span><br><span class="line">    mSprinklerHistoryList.addAll(sprinklerHistoryList);</span><br><span class="line">    notifyDataSetChanged();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Wifi使用"><a href="#Wifi使用" class="headerlink" title="Wifi使用"></a>Wifi使用</h3><ul><li>监听wifi的状态</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">BroadcastReceiver wifiStateBroadcastReceiver=<span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">MyLog.i(TAG,<span class="string">"监听到wifi变化"</span>);</span><br><span class="line"><span class="keyword">int</span> wifiState = intent.getIntExtra(WifiManager.EXTRA_WIFI_STATE, -<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (wifiState == WifiManager.WIFI_STATE_DISABLING) &#123;</span><br><span class="line">MyLog.i(TAG, <span class="string">"正在关闭"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (wifiState == WifiManager.WIFI_STATE_ENABLING) &#123;</span><br><span class="line">MyLog.i(TAG, <span class="string">"正在打开"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (wifiState == WifiManager.WIFI_STATE_DISABLED) &#123;</span><br><span class="line">MyLog.i(TAG, <span class="string">"已经关闭"</span>);</span><br><span class="line">closeLoadingDialog();</span><br><span class="line">ssidTv.setText(<span class="string">""</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (wifiState == WifiManager.WIFI_STATE_ENABLED) &#123;</span><br><span class="line">MyLog.i(TAG, <span class="string">"已经打开"</span>);</span><br><span class="line">showLoadingDialog();</span><br><span class="line">wifiManager.startScan();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">MyLog.i(TAG, <span class="string">"未知状态"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li><p>获取wifi状态</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> wifiState = wifiManager.getWifiState();</span><br><span class="line"><span class="keyword">switch</span> (wifiState)&#123;</span><br><span class="line"><span class="keyword">case</span> WifiManager.WIFI_STATE_DISABLED:</span><br><span class="line">MyLog.i(TAG,<span class="string">"WifiManager.WIFI_STATE_DISABLED"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WifiManager.WIFI_STATE_DISABLING:</span><br><span class="line">MyLog.i(TAG,<span class="string">"WifiManager.WIFI_STATE_DISABLING"</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WifiManager.WIFI_STATE_ENABLED:</span><br><span class="line">MyLog.i(TAG,<span class="string">"WifiManager.WIFI_STATE_ENABLED"</span>);</span><br><span class="line"><span class="keyword">if</span> (intent.getAction().matches(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)) &#123;</span><br><span class="line">closeLoadingDialog();</span><br><span class="line">processScanResults(wifiManager.getScanResults());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WifiManager.WIFI_STATE_ENABLING:</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
